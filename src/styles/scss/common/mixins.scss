@use 'sass:math';
@import 'variables.scss';

@mixin adaptiveFont($font-weight, $font-size, $line-height, $font-family){
  font-weight: $font-weight;
  font-size: $font-size;
  line-height: $line-height;
  font-family: $font-family;
  @each $size in $sizes {
    $font-size: $font-size - 3px;
    $line-height: $line-height - 3px;
    @media #{$size}{
      font-size: $font-size - 4px;
      line-height: $line-height - 4px;
    }
  }
}

@mixin adaptivePadding($value){
  padding: $value 0;
  $value2: $value;
  @for $i from 1 through 10{
    $value2: round($value2 - math.div($value2 * 1px , 10px));
    $maxWidth: calc(1399px - #{$i}*100px);
    @media screen and (max-width: $maxWidth){
      padding: $value2 0;
    }
  }
}

@mixin adaptiveMargin{
  margin: 0 auto;
  width: min(90%, 1300px);
  @media #{$phones}{
    margin: 0 min(20px, 5%);
    width: min(calc(100vw - 40px), 90%);
  }
}

@mixin adaptiveMarginLeft{
  margin-left: max(5%, calc((100% - 1300px) / 2));
  @media #{$phones}{
    margin-left: min(20px, 5%);
  }
}

@mixin adaptiveMarginRight{
  margin-right: max(5%, calc((100% - 1300px) / 2));
  @media #{$phones}{
    margin-right: min(20px, 5%);
  }
}

@mixin adaptiveMargin2{
  margin: 0 auto;
  width: min(90%, 860px);
  @media #{$phones}{
    margin: 0 min(20px, 5%);
    width: min(calc(100vw - 40px), 90%);
  }
}

@mixin flex{
  display: flex;
}

@mixin flex-footer-body{
  @include flex;
  display: flex; flex-wrap: wrap; justify-content: space-evenly;
}

@mixin flex-footer-bottom{
  @include flex;
  justify-content: space-between;
}

@mixin flex-navbar{
  @include flex;
  justify-content: space-between;
  align-items: center;
}

@mixin flex-content-news-header{
  @include flex;
  justify-content: space-between;
}

@mixin flex-content-author {
  @include flex;
  justify-content: space-between;
  align-items: center;
}

@mixin flex-content-author-profile{
  @include flex;
  align-items: center;
}

@mixin flex-content-below {
  @include flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

@mixin flex-content-news-body{
  @include flex;
  flex-wrap: wrap;
  justify-content: space-between;
  @media #{$tablets-big}{
    flex-wrap: wrap;
    justify-content: space-evenly;
  }
  @media #{$phones}{
    flex-wrap: wrap;
    justify-content: center;
  }
}

@mixin image-2x($image) {
  @media (min--moz-device-pixel-ratio: 1.3),
  (-o-min-device-pixel-ratio: 2.6/2),
  (-webkit-min-device-pixel-ratio: 1.3),
  (min-device-pixel-ratio: 1.3),
  (min-resolution: 1.3dppx) {
    background: url($image) no-repeat;
  }
}

// Single side border-radius
@mixin border-top-radius($radius) {
  border-top-right-radius: $radius;
  border-top-left-radius: $radius;
}

@mixin border-right-radius($radius) {
  border-bottom-right-radius: $radius;
  border-top-right-radius: $radius;
}

@mixin border-bottom-radius($radius) {
  border-bottom-right-radius: $radius;
  border-bottom-left-radius: $radius;
}

@mixin border-left-radius($radius) {
  border-bottom-left-radius: $radius;
  border-top-left-radius: $radius;
}

// BORDER RADIUS
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
}


//user select
@mixin userSelect($user) {
  -webkit-user-select: $user;
  -moz-user-select: $user;
  -ms-user-select: $user;
  user-select: $user;
}

//box sizing 
@mixin box-sizing($box) {
  box-sizing: $box;
  -moz-box-sizing: $box;
  -webkit-box-sizing: $box;
}

//placeholder
@mixin placeholder {
  ::-webkit-input-placeholder {
    @content
  }
  :-moz-placeholder {
    @content
  }
  ::-moz-placeholder {
    @content
  }
  :-ms-input-placeholder {
    @content
  }
}

@mixin placeholder-color($color) {
  &::-webkit-input-placeholder {
    /* WebKit browsers */
    color: $color;
  }
  &:-moz-placeholder {
    /* Mozilla Firefox 4 to 18 */
    color: $color;
  }
  &::-moz-placeholder {
    /* Mozilla Firefox 19+ */
    color: $color;
  }
  &:-ms-input-placeholder {
    /* Internet Explorer 10+ */
    color: $color;
  }
}

@mixin placeholder-style($style) {
  &::-webkit-input-placeholder {
    /* WebKit browsers */
    font-style: $style;
  }
  &:-moz-placeholder {
    /* Mozilla Firefox 4 to 18 */
    font-style: $style;
  }
  &::-moz-placeholder {
    /* Mozilla Firefox 19+ */
    font-style: $style;
  }
  &:-ms-input-placeholder {
    /* Internet Explorer 10+ */
    font-style: $style;
  }
}

//   transition 
@mixin transition($transition) {
  -webkit-transition: $transition;
  -moz-transition: $transition;
  transition: $transition;
}

//transform
@mixin transform($transform) {
  -ms-transform: $transform;
  /* IE 9 */
  -webkit-transform: $transform;
  /* Chrome, Safari, Opera */
  transform: $transform;
}

// rotate
@mixin rotate ($deg) {
  @include transform(rotate(#{$deg}deg));
}

// scale
@mixin scale($scale) {
  @include transform(scale($scale));
}

// translate
@mixin translate ($x, $y) {
  @include transform(translate($x, $y));
}

@mixin translateX ($x) {
  @include transform(translateX($x));
}

@mixin translateY ($y) {
  @include transform(translateY($y));
}

// translate rotate
@mixin translate-rotate ($x, $y, $deg) {
  @include transform(translate($x, $y)rotate(#{$deg}deg));
}

// skew
@mixin skew ($x, $y) {
  @include transform(skew(#{$x}deg, #{$y}deg));
}

@mixin rotate3d($vector-x: $default-vector-x, $vector-y: $default-vector-y, $vector-z: $default-vector-z, $rotate: $default-rotate, $perspective: false) {
  $trans: rotate3d($vector-x, $vector-y, $vector-z, $rotate);
  @if $perspective {
    $trans: perspective($perspective) $trans;
  }
}

@mixin even() {
  &:nth-child(even) {
    @content
  }
}

@mixin odd() {
  &:nth-child(odd) {
    @content
  }
}

@mixin fontawesomeIcon($content) {
  content: $content;
  font-family: "Font Awesome 5 Free", sans-serif;
  font-weight: 900;
}

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow: inset $top $left $blur $color;
    -moz-box-shadow: inset $top $left $blur $color;
    box-shadow: inset $top $left $blur $color;
  }
  @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}

@mixin selectArrow($arrow) {
  -webkit-appearance: $arrow;
  -moz-appearance: $arrow;
  appearance: $arrow;
}

@mixin keyframes($animationName) {
  @-webkit-keyframes #{$animationName} {
    @content;
  }
  @-moz-keyframes #{$animationName} {
    @content;
  }
  @-o-keyframes #{$animationName} {
    @content;
  }
  @keyframes #{$animationName} {
    @content;
  }
}

@mixin animate($name, $duration, $iteration, $direction) {
  -webkit-animation-duration: $duration;
  -moz-animation-duration: $duration;
  -o-animation-duration: $duration;
  animation-duration: $duration;

  -webkit-animation-iteration-count: $iteration;
  -moz-animation-iteration-count: $iteration;
  -o-animation-iteration-count: $iteration;
  animation-iteration-count: $iteration;

  -webkit-animation-name: $name;
  -moz-animation-name: $name;
  -o-animation-name: $name;
  animation-name: $name;

  -webkit-animation-direction: $direction;
  -moz-animation-direction: $direction;
  -o-animation-direction: $direction;
  animation-direction: $direction;
}